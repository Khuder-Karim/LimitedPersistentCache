{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 95ba5b9f025cfadfbe24","webpack:///./src/index.js","webpack:///./src/Storage/IChangeStorage.js","webpack:///./src/Storage/Error/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7DA;AACA;;AAEA;AAC2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,mCAAmC;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,mBAAmB;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,2CAA2C;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC3JA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yE;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,UAAU;AACzE;AACA;AACA;;AAIA","file":"LimitedPersistentCache.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LimitedPersistentCache\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LimitedPersistentCache\"] = factory();\n\telse\n\t\troot[\"LimitedPersistentCache\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 95ba5b9f025cfadfbe24","import * as Storage from './Storage';\r\nimport * as CountStrategy from './Storage/CountingStrategy';\r\n\r\nimport IChangeStorage from './Storage/IChangeStorage';\r\nimport { NotEnoughtMemory } from './Storage/Error/index';\r\n\r\nclass Cache {\r\n    constructor() {\r\n        this._levels = [];\r\n        this._changeListeners = {};\r\n        this._queueRequest = [];\r\n\r\n        this._isBlockCache = false;\r\n\r\n        this.set = this._blockCache(this.set);\r\n        this.get = this._blockCache(this.get);\r\n        this.remove = this._blockCache(this.remove);\r\n\r\n        this._expellingListener = this._expellingListener.bind(this);\r\n        this._changeStorageListener = this._changeStorageListener.bind(this);\r\n    }\r\n\r\n    _blockCache(func) {\r\n        return function block() {\r\n            return new Promise(async (resolve, reject) => {\r\n                if(this._isBlockCache) {\r\n                    let newItemInQueue = block.bind(this, ...arguments);\r\n                    newItemInQueue.resolve = resolve;\r\n                    newItemInQueue.reject = reject;\r\n                    this._queueRequest.push(newItemInQueue);\r\n                    return;\r\n                }\r\n\r\n                this._isBlockCache = true;\r\n                let result = await func.apply(this, arguments);\r\n                this._isBlockCache = false;\r\n\r\n                if (this._queueRequest.length) {\r\n                    let headQueue = this._queueRequest.shift();\r\n                    headQueue().then(headQueue.resolve).catch(headQueue.catch);\r\n                }\r\n\r\n                resolve(result);\r\n            })\r\n        };\r\n    }\r\n\r\n    addStorage(storage) {\r\n        if(!this._isValidStorage(storage)) return false;\r\n\r\n        storage.setExpellingListener(this._expellingListener);\r\n        storage.subscribeToChange(this._changeStorageListener);\r\n        this._levels.push({ id: storage.id, storage: storage });\r\n\r\n        return storage.id;\r\n    }\r\n\r\n    removeStorage(storageId) {\r\n        let index = this._levels.map(level => level.id).indexOf(storageId);\r\n        if(index >= 0) {\r\n            this._levels.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getAllStorage() {\r\n        return this._levels.map(level => level.storage);\r\n    }\r\n\r\n    getStorageById(id) {\r\n        return this._levels.map(level => level.storage).find(storage => storage.id === id);\r\n    }\r\n\r\n    async get(key) {\r\n        let { storageId, value } = await this._recursiveGet(key);\r\n\r\n        if(value) {\r\n            let targetStorage = this.getStorageById(storageId),\r\n                firstStorage = this._levels[0].storage\r\n            ;\r\n\r\n            await targetStorage.remove(key);\r\n            await firstStorage.set(key, value);\r\n            return value;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    async _recursiveGet(key, fromLevel=0) {\r\n        let currentLevel = this._levels[fromLevel];\r\n        if (!currentLevel) return null;\r\n\r\n        let value = await currentLevel.storage.get(key);\r\n\r\n        return value ? { storageId: currentLevel.id, value: value } : this._recursiveGet(key, fromLevel+1);\r\n    }\r\n\r\n    async set(key, value) {\r\n        return await this._recursiveSet(key, value);\r\n    }\r\n    async _recursiveSet(key, value, toLevel=0) {\r\n        let currentLevel = this._levels[toLevel];\r\n        if(!currentLevel) return new Error(\"no suitable storage\");\r\n\r\n        let response;\r\n        try {\r\n            response = await currentLevel.storage.set(key, value);\r\n        }\r\n        catch(err) {\r\n            if(err instanceof NotEnoughtMemory) return this._recursiveSet(key, value, toLevel+1);\r\n            else return err;\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    async remove(key) {\r\n        return await this._recursiveRemove(key);\r\n    }\r\n    async _recursiveRemove(key, fromLevel=0) {\r\n        let currentLevel = this._levels[fromLevel];\r\n        if(!currentLevel) return null;\r\n\r\n        let value = await currentLevel.storage.remove(key);\r\n\r\n        return value ? value : this._recursiveRemove(key, fromLevel+1);\r\n    }\r\n\r\n    async _expellingListener({ id, key, value }) {\r\n        let nextStorage = this._getNextStorage(id);\r\n        return nextStorage ? await nextStorage.set(key, value) : null;\r\n    }\r\n\r\n    _changeStorageListener(changeObj) {\r\n        if(!(changeObj instanceof IChangeStorage)) return null;\r\n        Object.keys(this._changeListeners).forEach(key => this._changeListeners[key](changeObj));\r\n    }\r\n\r\n    _getNextStorage(id) {\r\n        let currentPositionStorage = this._levels.map(obj => obj.id).indexOf(id);\r\n        let nextStorage = this._levels[currentPositionStorage+1];\r\n        return nextStorage ? nextStorage.storage : null;\r\n    }\r\n\r\n    _isValidStorage(storage) {\r\n        let isGood = true;\r\n        if(storage instanceof LocalStorage) {\r\n            this._levels.forEach(level => {\r\n                if(level.storage instanceof LocalStorage)\r\n                    isGood = false;\r\n            });\r\n        }\r\n        return isGood;\r\n    }\r\n}\r\n\r\nexport {\r\n    CountStrategy,\r\n    Storage,\r\n    Cache\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","/**\r\n * Created by Karim on 23.07.2017.\r\n */\r\n\r\nclass IChangeStorage {\r\n    constructor(id, key, value, command) {\r\n        this.id = id;\r\n        this.key = key;\r\n        this.value = value;\r\n        this.command = command;\r\n    }\r\n}\r\n\r\nexport default IChangeStorage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Storage/IChangeStorage.js\n// module id = 3\n// module chunks = 0","/**\r\n * Created by Karim on 23.07.2017.\r\n */\r\nclass NotEnoughtMemory {\r\n    constructor(storageId, message) {\r\n        this.name = this.constructor.name;\r\n        this.storageId = storageId;\r\n        this.message = message || `Too big value for storage ${storageId}`;\r\n    }\r\n}\r\nNotEnoughtMemory.prototype = Object.create(Error.prototype);\r\n\r\nexport {\r\n    NotEnoughtMemory\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Storage/Error/index.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}